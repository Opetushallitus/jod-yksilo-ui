name: Build and deploy JOD Yksil√∂ UI
on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - uses: actions/setup-node@v4
        with:
          node-version: lts/iron
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npx eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0

      - name: Run Prettier
        run: npx prettier . --check

      - name: Run Vitest unit tests
        run: npx vitest --coverage.enabled true

      - name: Upload Vitest report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage
          path: coverage/
          retention-days: 30

      - name: Run build
        run: npm run build

      - name: Upload dist artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

      # E2E tests
      # It's not recommended to cache browsers.
      # See https://playwright.dev/docs/ci#caching-browsers
      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Run Playwright e2e tests
        run: npx playwright test

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      # SonarCloud analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy:
    name: Deploy
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    environment: development
    runs-on: ubuntu-latest
    needs:
      - build
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: dist

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.JOD_AWS_ACCOUNT_ID }}:role/${{ secrets.JOD_AWS_GITHUB_ROLE_NAME}}
          aws-region: eu-west-1

      - name: Copy files to S3
        run: |
          aws s3 sync --delete --cache-control "public,max-age=31536000,immutable" assets/ s3://${{ secrets.JOD_AWS_DIST_BUCKET }}/assets
          aws s3 sync --exclude "assets/*" --delete --cache-control "public,max-age=60" . s3://${{ secrets.JOD_AWS_DIST_BUCKET }}

      - name: Invalidate cache for index.html on deploy
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.JOD_AWS_CLOUDFRONT_ID }} --paths '/index.html'
