/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/api/profiili/tyopaikat': {
    get: operations['tyopaikkaGetAll'];
    post: operations['tyopaikkaAdd'];
  };
  '/api/profiili/tyopaikat/{id}/toimenkuvat': {
    get: operations['toimenkuvaGetAll'];
    post: operations['toimenkuvaAdd'];
  };
  '/api/profiili/osaamiset': {
    get: operations['yksilonOsaaminenFind'];
    post: operations['yksilonOsaaminenAdd'];
    delete: operations['yksilonOsaaminenDelete'];
  };
  '/api/profiili/koulutukset': {
    get: operations['koulutusFind'];
    /**
     * Adds or replaces a Kategoria and its associated Koulutus
     * @description This endpoint can be used to add a new Kategoria and its associated Koulutus or to
     * update an existing Kategoria and its associated Koulutus. When updating, unlisted
     * existing Koulutus will be removed from the Kategoria, unless the Kategoria is null.
     */
    post: operations['koulutusUpdate'];
    delete: operations['koulutusDeleteAll'];
    /**
     * Updates a Kategoria and its associated Koulutus
     * @description This endpoint can be used to add a new Kategoria and its associated Koulutus or to
     * do a partial update. Unlike update, this endpoint will not remove unlisted existing
     * Koulutus.
     */
    patch: operations['koulutusPartialUpdate'];
  };
  '/api/ehdotus/tyomahdollisuudet': {
    post: operations['tyomahdollisuudetCreateEhdotus'];
  };
  '/api/ehdotus/osaamiset': {
    post: operations['osaamisetEhdotusCreateEhdotus'];
  };
  '/api/profiili/tyopaikat/{id}': {
    delete: operations['tyopaikkaDelete'];
    patch: operations['tyopaikkaUpdate'];
  };
  '/api/profiili/tyopaikat/{id}/toimenkuvat/{toimenkuvaId}': {
    delete: operations['toimenkuvaDelete'];
    patch: operations['toimenkuvaUpdate'];
  };
  '/api/profiili/koulutukset/{id}': {
    get: operations['koulutusGet'];
    delete: operations['koulutusDelete'];
  };
  '/api/profiili/koulutukset/kategoriat': {
    get: operations['koulutusGetKategoriat'];
  };
  '/api/osaamiset': {
    get: operations['osaaminenFindAll'];
  };
  '/api/csrf': {
    get: operations['csrfCsrf'];
  };
  '/api/profiili/osaamiset/{id}': {
    delete: operations['yksilonOsaaminenDelete'];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /**
     * @example {
     *   "fi": "suomeksi",
     *   "sv": "p√• svenska"
     * }
     */
    LokalisoituTeksti: {
      empty?: boolean;
      [key: string]: string | undefined;
    };
    ToimenkuvaDto: {
      /** Format: uuid */
      id?: string;
      nimi: components['schemas']['LokalisoituTeksti'];
      kuvaus?: components['schemas']['LokalisoituTeksti'];
      /** Format: date */
      alkuPvm?: string;
      /** Format: date */
      loppuPvm?: string;
      osaamiset?: string[];
    };
    TyopaikkaDto: {
      /** Format: uuid */
      id?: string;
      nimi: components['schemas']['LokalisoituTeksti'];
      toimenkuvat?: components['schemas']['ToimenkuvaDto'][];
    };
    IdDtoUUID: {
      /** Format: uuid */
      id?: string;
    };
    OsaamisenLahdeDto: {
      /** @enum {string} */
      tyyppi: 'TOIMENKUVA' | 'KOULUTUS';
      /** Format: uuid */
      id: string;
    };
    YksilonOsaaminenLisaysDto: {
      /** @description Reference */
      osaamiset: string[];
      lahde: components['schemas']['OsaamisenLahdeDto'];
    };
    KategoriaDto: {
      /** Format: uuid */
      id?: string;
      nimi?: components['schemas']['LokalisoituTeksti'];
      kuvaus?: components['schemas']['LokalisoituTeksti'];
    };
    KoulutusDto: {
      /** Format: uuid */
      id?: string;
      nimi: components['schemas']['LokalisoituTeksti'];
      kuvaus?: components['schemas']['LokalisoituTeksti'];
      /** Format: date */
      alkuPvm?: string;
      /** Format: date */
      loppuPvm?: string;
      osaamiset?: string[];
    };
    KoulutusKategoriaDto: {
      kategoria?: components['schemas']['KategoriaDto'];
      koulutukset?: components['schemas']['KoulutusDto'][];
    };
    KoulutusUpdateResultDto: {
      /** Format: uuid */
      kategoria?: string;
      koulutukset?: string[];
    };
    Taidot: {
      kuvaus: string;
    };
    Ehdotus: {
      /** Format: uri */
      id?: string;
      nimi?: string;
      /** Format: uri */
      tyyppi?: string;
      /** Format: double */
      osuvuus?: number;
    };
    OsaaminenDto: {
      /** Format: uri */
      uri?: string;
      nimi?: components['schemas']['LokalisoituTeksti'];
      kuvaus?: components['schemas']['LokalisoituTeksti'];
    };
    YksilonOsaaminenDto: {
      /** Format: uuid */
      id?: string;
      osaaminen?: components['schemas']['OsaaminenDto'];
      lahde?: components['schemas']['OsaamisenLahdeDto'];
    };
    CsrfToken: {
      headerName?: string;
      parameterName?: string;
      token?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {
  tyopaikkaGetAll: {
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['TyopaikkaDto'][];
        };
      };
    };
  };
  tyopaikkaAdd: {
    requestBody: {
      content: {
        'application/json': components['schemas']['TyopaikkaDto'];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          'application/json': components['schemas']['IdDtoUUID'];
        };
      };
    };
  };
  toimenkuvaGetAll: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['ToimenkuvaDto'][];
        };
      };
    };
  };
  toimenkuvaAdd: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['ToimenkuvaDto'];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          'application/json': components['schemas']['IdDtoUUID'];
        };
      };
    };
  };
  yksilonOsaaminenFind: {
    parameters: {
      query?: {
        tyyppi?: 'TOIMENKUVA' | 'KOULUTUS';
        id?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['YksilonOsaaminenDto'][];
        };
      };
    };
  };
  yksilonOsaaminenAdd: {
    requestBody: {
      content: {
        'application/json': components['schemas']['YksilonOsaaminenLisaysDto'];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          'application/json': components['schemas']['IdDtoUUID'][];
        };
      };
    };
  };
  yksilonOsaaminenDelete: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description No Content */
      204: {
        content: never;
      };
    };
  };
  koulutusFind: {
    parameters: {
      query?: {
        kategoriaId?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['KoulutusKategoriaDto'][];
        };
      };
    };
  };
  /**
   * Adds or replaces a Kategoria and its associated Koulutus
   * @description This endpoint can be used to add a new Kategoria and its associated Koulutus or to
   * update an existing Kategoria and its associated Koulutus. When updating, unlisted
   * existing Koulutus will be removed from the Kategoria, unless the Kategoria is null.
   */
  koulutusUpdate: {
    requestBody: {
      content: {
        'application/json': components['schemas']['KoulutusKategoriaDto'];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['KoulutusUpdateResultDto'];
        };
      };
    };
  };
  koulutusDeleteAll: {
    parameters: {
      query: {
        koulutukset: string[];
      };
    };
    responses: {
      /** @description No Content */
      204: {
        content: never;
      };
    };
  };
  /**
   * Updates a Kategoria and its associated Koulutus
   * @description This endpoint can be used to add a new Kategoria and its associated Koulutus or to
   * do a partial update. Unlike update, this endpoint will not remove unlisted existing
   * Koulutus.
   */
  koulutusPartialUpdate: {
    requestBody: {
      content: {
        'application/json': components['schemas']['KoulutusKategoriaDto'];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['KoulutusUpdateResultDto'];
        };
      };
    };
  };
  tyomahdollisuudetCreateEhdotus: {
    requestBody: {
      content: {
        'application/json': string[];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': unknown;
        };
      };
    };
  };
  osaamisetEhdotusCreateEhdotus: {
    requestBody: {
      content: {
        'application/json': components['schemas']['Taidot'];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['Ehdotus'][];
        };
      };
    };
  };
  tyopaikkaDelete: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description No Content */
      204: {
        content: never;
      };
    };
  };
  tyopaikkaUpdate: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['TyopaikkaDto'];
      };
    };
    responses: {
      /** @description No Content */
      204: {
        content: never;
      };
    };
  };
  toimenkuvaDelete: {
    parameters: {
      path: {
        id: string;
        toimenkuvaId: string;
      };
    };
    responses: {
      /** @description No Content */
      204: {
        content: never;
      };
    };
  };
  toimenkuvaUpdate: {
    parameters: {
      path: {
        id: string;
        toimenkuvaId: string;
      };
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['ToimenkuvaDto'];
      };
    };
    responses: {
      /** @description No Content */
      204: {
        content: never;
      };
    };
  };
  koulutusGet: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description No Content */
      204: {
        content: {
          'application/json': components['schemas']['KoulutusKategoriaDto'];
        };
      };
    };
  };
  koulutusDelete: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description No Content */
      204: {
        content: never;
      };
    };
  };
  koulutusGetKategoriat: {
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['KategoriaDto'][];
        };
      };
    };
  };
  osaaminenFindAll: {
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['OsaaminenDto'][];
        };
      };
    };
  };
  csrfCsrf: {
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['CsrfToken'];
        };
      };
    };
  };
}
