/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/api/profiili/tyopaikat': {
    get: operations['getAll'];
    post: operations['add'];
  };
  '/api/profiili/tyopaikat/{id}/toimenkuvat': {
    get: operations['getAll_1'];
    post: operations['add_1'];
  };
  '/api/profiili/osaamiset': {
    get: operations['find'];
    post: operations['add_2'];
    delete: operations['delete_2'];
  };
  '/api/profiili/koulutukset': {
    get: operations['getAll_2'];
    post: operations['add_3'];
  };
  '/api/ehdotus/tyomahdollisuudet': {
    post: operations['createEhdotus'];
  };
  '/api/ehdotus/osaamiset': {
    post: operations['createEhdotus_1'];
  };
  '/api/profiili/tyopaikat/{id}': {
    delete: operations['delete'];
    patch: operations['update'];
  };
  '/api/profiili/tyopaikat/{id}/toimenkuvat/{toimenkuvaId}': {
    delete: operations['delete_1'];
    patch: operations['update_1'];
  };
  '/api/profiili/koulutukset/{id}': {
    get: operations['get'];
    delete: operations['delete_4'];
    patch: operations['update_2'];
  };
  '/api/osaamiset': {
    get: operations['findAll'];
  };
  '/api/csrf': {
    get: operations['csrf'];
  };
  '/api/profiili/osaamiset/{id}': {
    delete: operations['delete_3'];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /**
     * @example {
     *   "fi": "suomeksi",
     *   "sv": "p√• svenska"
     * }
     */
    LokalisoituTeksti: {
      [key: string]: string;
    };
    ToimenkuvaDto: {
      /** Format: uuid */
      id?: string;
      nimi: components['schemas']['LokalisoituTeksti'];
      kuvaus?: components['schemas']['LokalisoituTeksti'];
      /** Format: date */
      alkuPvm?: string;
      /** Format: date */
      loppuPvm?: string;
      osaamiset?: string[];
    };
    TyopaikkaDto: {
      /** Format: uuid */
      id?: string;
      nimi: components['schemas']['LokalisoituTeksti'];
      toimenkuvat?: components['schemas']['ToimenkuvaDto'][];
    };
    IdDtoUUID: {
      /** Format: uuid */
      id?: string;
    };
    OsaamisenLahdeDto: {
      /** @enum {string} */
      tyyppi: 'TOIMENKUVA' | 'KOULUTUS';
      /** Format: uuid */
      id: string;
    };
    YksilonOsaaminenLisaysDto: {
      /** @description Reference */
      osaamiset: string[];
      lahde: components['schemas']['OsaamisenLahdeDto'];
    };
    KoulutusDto: {
      /** Format: uuid */
      id?: string;
      nimi: components['schemas']['LokalisoituTeksti'];
      kuvaus?: components['schemas']['LokalisoituTeksti'];
      /** Format: date */
      alkuPvm?: string;
      /** Format: date */
      loppuPvm?: string;
    };
    Taidot: {
      kuvaus: string;
    };
    Osaaminen: {
      /** Format: uri */
      id?: string;
      nimi?: string;
      /** Format: uri */
      tyyppi?: string;
      /** Format: double */
      osuvuus?: number;
    };
    OsaaminenDto: {
      /** Format: uri */
      uri?: string;
      nimi?: components['schemas']['LokalisoituTeksti'];
      kuvaus?: components['schemas']['LokalisoituTeksti'];
    };
    YksilonOsaaminenDto: {
      /** Format: uuid */
      id?: string;
      osaaminen?: components['schemas']['OsaaminenDto'];
      lahde?: components['schemas']['OsaamisenLahdeDto'];
    };
    CsrfToken: {
      token?: string;
      headerName?: string;
      parameterName?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {
  getAll: {
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['TyopaikkaDto'][];
        };
      };
    };
  };
  add: {
    requestBody: {
      content: {
        'application/json': components['schemas']['TyopaikkaDto'];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          'application/json': components['schemas']['IdDtoUUID'];
        };
      };
    };
  };
  getAll_1: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['ToimenkuvaDto'][];
        };
      };
    };
  };
  add_1: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['ToimenkuvaDto'];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          'application/json': components['schemas']['IdDtoUUID'];
        };
      };
    };
  };
  find: {
    parameters: {
      query?: {
        tyyppi?: 'TOIMENKUVA' | 'KOULUTUS';
        id?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['YksilonOsaaminenDto'][];
        };
      };
    };
  };
  add_2: {
    requestBody: {
      content: {
        'application/json': components['schemas']['YksilonOsaaminenLisaysDto'];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          'application/json': components['schemas']['IdDtoUUID'][];
        };
      };
    };
  };
  delete_2: {
    requestBody: {
      content: {
        'application/json': string[];
      };
    };
    responses: {
      /** @description No Content */
      204: {
        content: never;
      };
    };
  };
  getAll_2: {
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['KoulutusDto'][];
        };
      };
    };
  };
  add_3: {
    requestBody: {
      content: {
        'application/json': components['schemas']['KoulutusDto'];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          'application/json': components['schemas']['IdDtoUUID'];
        };
      };
    };
  };
  createEhdotus: {
    requestBody: {
      content: {
        'application/json': string[];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': unknown;
        };
      };
    };
  };
  createEhdotus_1: {
    requestBody: {
      content: {
        'application/json': components['schemas']['Taidot'];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['Osaaminen'][];
        };
      };
    };
  };
  delete: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description No Content */
      204: {
        content: never;
      };
    };
  };
  update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['TyopaikkaDto'];
      };
    };
    responses: {
      /** @description No Content */
      204: {
        content: never;
      };
    };
  };
  delete_1: {
    parameters: {
      path: {
        id: string;
        toimenkuvaId: string;
      };
    };
    responses: {
      /** @description No Content */
      204: {
        content: never;
      };
    };
  };
  update_1: {
    parameters: {
      path: {
        id: string;
        toimenkuvaId: string;
      };
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['ToimenkuvaDto'];
      };
    };
    responses: {
      /** @description No Content */
      204: {
        content: never;
      };
    };
  };
  get: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['KoulutusDto'];
        };
      };
    };
  };
  delete_4: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description No Content */
      204: {
        content: never;
      };
    };
  };
  update_2: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['KoulutusDto'];
      };
    };
    responses: {
      /** @description No Content */
      204: {
        content: never;
      };
    };
  };
  findAll: {
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['OsaaminenDto'][];
        };
      };
    };
  };
  csrf: {
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['CsrfToken'];
        };
      };
    };
  };
  delete_3: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description No Content */
      204: {
        content: never;
      };
    };
  };
}
